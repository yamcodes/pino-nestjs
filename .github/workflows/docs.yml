name: docs
on:
  push:
    branches: [main]
    paths:
      - README.md
  workflow_dispatch: # Temporary

# Set permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Create docs directory
        run: mkdir -p docs
      - name: Copy README to docs
        run: cp README.md docs/
      - name: Create index.html
        run: |
          cat > docs/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
            <meta name="viewport" content="width=device-width,initial-scale=1">
            <meta charset="UTF-8">
            <title>Pino NestJS</title>
            <link rel="stylesheet" href="//cdn.jsdelivr.net/npm/docsify@4/themes/vue.css">
          </head>
          <body>
            <div id="app"></div>
            <script>
              window.$docsify = {
                name: 'Pino NestJS',
                repo: 'https://github.com/yamcodes/pino-nestjs',
                coverpage: false,
                loadSidebar: false
              }
            </script>
            <script src="//cdn.jsdelivr.net/npm/docsify@4"></script>
          </body>
          </html>
          EOL
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: docs

  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action

